version: 2
jobs:
  build:

    # VM we're going to use to build the docker container
    machine:
      enabled: true
      docker_layer_caching: true
      image: circleci/classic:201808-01

    # Variables that are easier to set up here to propagate through
    # the build script
    environment:

      # Info on where to push the build in Dockerhub
      DOCKERHUB_ORG: elementaryrobotics
      DOCKERHUB_ATOM_REPO: atom
      DOCKERHUB_NUCLEUS_REPO: nucleus

      # Name of the service in docker-compose.yml
      DOCKER_COMPOSE_PROJECT_NAME: atom_test
      DOCKER_COMPOSE_ATOM_SERVICE_NAME: atom
      DOCKER_COMPOSE_NUCLEUS_SERVICE_NAME: nucleus

    steps:
      - checkout

      # Need to log into docker
      - run:
          name: Docker login
          command: echo ${DOCKERHUB_PASSWORD} | docker login -u ${DOCKERHUB_USER} --password-stdin

      # Need to update submodules
      - run:
          name: Update Submodules
          command: git submodule update --init --recursive

      #
      # Build docker image
      #
      - run:
          name: Build docker
          command: docker-compose -p ${DOCKER_COMPOSE_PROJECT_NAME} build

      #
      # Launch docker items
      #
      - run:
          name: Launch docker
          command: docker-compose -p ${DOCKER_COMPOSE_PROJECT_NAME} up -d

      #
      # Run tests
      #
      - run:
          name: Python tests
          command: docker exec -it -w /atom/languages/python ${DOCKER_COMPOSE_PROJECT_NAME}_${DOCKER_COMPOSE_ATOM_SERVICE_NAME}_1 pytest
      - run:
          name: C tests
          command:  docker exec -it -w /atom/languages/c ${DOCKER_COMPOSE_PROJECT_NAME}_${DOCKER_COMPOSE_ATOM_SERVICE_NAME}_1 make test
      - run:
          name: C++ tests
          command:  docker exec -it -w /atom/languages/cpp ${DOCKER_COMPOSE_PROJECT_NAME}_${DOCKER_COMPOSE_ATOM_SERVICE_NAME}_1 make test
      - run:
          name: C++ valgrind check
          command: docker exec -it -w /atom/languages/cpp ${DOCKER_COMPOSE_PROJECT_NAME}_${DOCKER_COMPOSE_ATOM_SERVICE_NAME}_1 valgrind -v --tool=memcheck --leak-check=full --num-callers=40 --log-file=valgrind.log --error-exitcode=1 test/build/test_atom_cpp
          environment:
            G_SLICE: always-malloc
            G_DEBUG: gc-friendly
      - run:
          name: C++ copy valgrind log
          command: docker cp ${DOCKER_COMPOSE_PROJECT_NAME}_${DOCKER_COMPOSE_ATOM_SERVICE_NAME}_1:/atom/languages/cpp/valgrind.log /tmp/valgrind.log
      - store_artifacts:
          path: /tmp/valgrind.log
          destination: valgrind.log

      # Push the image back to DockerHub, either under a "development" tag
      # or under a master tag
      #
      - run:
          name: Docker Tag and Push
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]
            then

              # Tag and push atom
              docker tag ${DOCKER_COMPOSE_PROJECT_NAME}_${DOCKER_COMPOSE_ATOM_SERVICE_NAME}:latest ${DOCKERHUB_ORG}/${DOCKERHUB_ATOM_REPO}:master-${CIRCLE_BUILD_NUM}-${CIRCLE_SHA1}
              docker tag ${DOCKER_COMPOSE_PROJECT_NAME}_${DOCKER_COMPOSE_ATOM_SERVICE_NAME}:latest ${DOCKERHUB_ORG}/${DOCKERHUB_ATOM_REPO}:latest
              docker push ${DOCKERHUB_ORG}/${DOCKERHUB_ATOM_REPO}:master-${CIRCLE_BUILD_NUM}-${CIRCLE_SHA1}
              docker push ${DOCKERHUB_ORG}/${DOCKERHUB_ATOM_REPO}:latest

              # Tag and push nucleus
              docker tag ${DOCKER_COMPOSE_PROJECT_NAME}_${DOCKER_COMPOSE_NUCLEUS_SERVICE_NAME}:latest ${DOCKERHUB_ORG}/${DOCKERHUB_NUCLEUS_REPO}:master-${CIRCLE_BUILD_NUM}-${CIRCLE_SHA1}
              docker tag ${DOCKER_COMPOSE_PROJECT_NAME}_${DOCKER_COMPOSE_NUCLEUS_SERVICE_NAME}:latest ${DOCKERHUB_ORG}/${DOCKERHUB_NUCLEUS_REPO}:latest
              docker push ${DOCKERHUB_ORG}/${DOCKERHUB_NUCLEUS_REPO}:master-${CIRCLE_BUILD_NUM}-${CIRCLE_SHA1}
              docker push ${DOCKERHUB_ORG}/${DOCKERHUB_NUCLEUS_REPO}:latest

            else

              # Tag and push atom
              docker tag ${DOCKER_COMPOSE_PROJECT_NAME}_${DOCKER_COMPOSE_ATOM_SERVICE_NAME}:latest ${DOCKERHUB_ORG}/${DOCKERHUB_ATOM_REPO}:development-${CIRCLE_BUILD_NUM}-${CIRCLE_SHA1}
              docker push ${DOCKERHUB_ORG}/${DOCKERHUB_ATOM_REPO}:development-${CIRCLE_BUILD_NUM}-${CIRCLE_SHA1}

              # Tag and push nucleus
              docker tag ${DOCKER_COMPOSE_PROJECT_NAME}_${DOCKER_COMPOSE_NUCLEUS_SERVICE_NAME}:latest ${DOCKERHUB_ORG}/${DOCKERHUB_NUCLEUS_REPO}:development-${CIRCLE_BUILD_NUM}-${CIRCLE_SHA1}
              docker push ${DOCKERHUB_ORG}/${DOCKERHUB_NUCLEUS_REPO}:development-${CIRCLE_BUILD_NUM}-${CIRCLE_SHA1}
            fi
