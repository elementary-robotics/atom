FROM redis:alpine

# Want to copy over the contents of this repo to the code
#	section so that we have the source
ADD ./launch_nucleus.sh /nucleus/launch.sh
ADD ./redis.conf /nucleus/redis.conf
ADD . /atom

# Install required linux packages
RUN apk add --no-cache gcc musl-dev g++
RUN apk add --no-cache make cmake git

# Install essentials for python
RUN apk add --no-cache python3
RUN python3 -m ensurepip
RUN pip3 install --upgrade pip setuptools

# Build and install msgpack
RUN pip3 install msgpack
WORKDIR /usr/src
RUN git clone https://github.com/msgpack/msgpack-c.git
WORKDIR /usr/src/msgpack-c
RUN cmake -DMSGPACK_CXX11=ON . && make install

# Build and install arrow
RUN apk add --no-cache \
            python3-dev \
            build-base \
            bash \
            boost-dev \
            autoconf \
            zlib-dev \
            libressl-dev \
            flex \
            bison

RUN pip3 install --no-cache-dir six pytest numpy cython
ARG ARROW_VERSION=0.15.1
ARG ARROW_BUILD_TYPE=release
ENV ARROW_HOME=/usr/local \
    PARQUET_HOME=/usr/local
ENV PYTHON_EXECUTABLE=/usr/bin/python3

RUN mkdir /arrow \
    && apk add --no-cache curl \
    && curl -o /tmp/apache-arrow.zip -SL https://codeload.github.com/apache/arrow/zip/master \
    && unzip /tmp/apache-arrow.zip \
    && mv arrow-master/* /arrow/ \
    && mkdir -p /arrow/cpp/build \
    && cd /arrow/cpp/build \
    && cmake -DCMAKE_BUILD_TYPE=$ARROW_BUILD_TYPE \
          -DOPENSSL_ROOT_DIR=/usr/local/ssl \
          -DCMAKE_INSTALL_LIBDIR=lib \
          -DCMAKE_INSTALL_PREFIX=$ARROW_HOME \
          -DARROW_WITH_BZ2=ON \
          -DARROW_WITH_ZLIB=ON \
          -DARROW_WITH_ZSTD=ON \
          -DARROW_WITH_LZ4=ON \
          -DARROW_WITH_SNAPPY=ON \
          -DARROW_PARQUET=ON \
          -DARROW_PYTHON=ON \
          -DARROW_PLASMA=ON \
          -DARROW_BUILD_TESTS=OFF \
          -DPYTHON_EXECUTABLE=$PYTHON_EXECUTABLE \
          .. \
    && make -j$(nproc) \
    && make install \
    && cd /arrow/python \
    && python3 setup.py build_ext --build-type=$ARROW_BUILD_TYPE --with-parquet \
    && python3 setup.py install \
    && rm -rf /arrow /tmp/apache-arrow.tar.gz

# Build and install python library for atom
WORKDIR /atom/languages/python
RUN pip3 install -r requirements.txt
RUN python3 setup.py install

# Install depedencies for atom-cli
WORKDIR /atom/utilities/atom-cli
RUN pip3 install -r requirements.txt
RUN cp atom-cli.py /usr/bin/atom-cli
RUN chmod +x /usr/bin/atom-cli

# Change directory to nucleus and chown the launch script
WORKDIR /nucleus
RUN chmod +x launch.sh
CMD ["./launch.sh"]
