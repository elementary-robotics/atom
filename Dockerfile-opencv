################################################################################
#
# Dockerfile for adding opencv into atom (or any debian-based image)
#
################################################################################

ARG BASE_IMAGE
ARG PRODUCTION_IMAGE
FROM ${BASE_IMAGE} as with-opencv

ARG ARCH=x86_64
ARG DEBIAN_FRONTEND=noninteractive

# Install pre-requisites
RUN apt-get update && apt-get install -y \
    zlib1g-dev \
    libjpeg62-turbo-dev \
    libpng-dev \
    libtiff-dev \
    libopenexr-dev \
    libavcodec-dev \
    libavformat-dev \
    libswscale-dev \
    libwebp-dev

# Install openCV + python3 bindings
COPY ./third-party/opencv /atom/third-party/opencv
WORKDIR /atom/third-party/opencv
RUN mkdir -p build && cd build && cmake \
    -DCMAKE_BUILD_TYPE=Release \
    -DCMAKE_INSTALL_PREFIX=/usr/local \
    -DPYTHON3_EXECUTABLE=/opt/venv/bin/python3 \
    -DPYTHON_INCLUDE_DIR=/usr/include/python3.7m \
    -DPYTHON_INCLUDE_DIR2=/usr/include/${ARCH}-linux-gnu/python3.7m \
    -DPYTHON_LIBRARY=/usr/lib/${ARCH}-linux-gnu/libpython3.7m.so \
    -DPYTHON3_NUMPY_INCLUDE_DIRS=/opt/venv/lib/python3.7/site-packages/numpy-1.18.3-py3.7-linux-${ARCH}.egg/numpy/core/include \
    -DOPENCV_PYTHON3_INSTALL_PATH=/opt/venv/lib/python3.7/site-packages \
    ../ && \
    make -j8 && \
    make install

# Install Pillow (PIL) as that's also used frequently with opencv
COPY ./languages/python/third-party/Pillow /atom/languages/python/third-party/Pillow
WORKDIR /atom/languages/python/third-party/Pillow
RUN MAX_CONCURRENCY=8 python3 setup.py install

RUN ldd /usr/local/lib/libopencv* | grep "=> /" | awk '{print $3}' | sort -u > /tmp/required_libs.txt

FROM ${PRODUCTION_IMAGE} as no-deps

RUN ls /lib/x86_64-linux-gnu/*.so* > /tmp/existing_libs.txt && \
    ls /usr/lib/x86_64-linux-gnu/*.so* >> /tmp/existing_libs.txt

FROM with-opencv as opencv-deps

COPY --from=no-deps /tmp/existing_libs.txt /tmp/existing_libs.txt
RUN diff --new-line-format="" --unchanged-line-format=""  /tmp/required_libs.txt /tmp/existing_libs.txt | grep -v /usr/local/lib > /tmp/libs_to_copy.txt
RUN xargs -a /tmp/libs_to_copy.txt cp -L -t /usr/local/lib

FROM ${BASE_IMAGE} as opencv-base

COPY --from=opencv-deps /usr/local/lib /usr/local/lib
COPY --from=opencv-deps /usr/local/include /usr/local/include
COPY --from=opencv-deps /opt/venv /opt/venv
