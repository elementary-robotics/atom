################################################################################
#
# Dockerfile for adding VNC into atom (or any debian-based image)
#
################################################################################

ARG BASE_IMAGE=elementaryrobotics/atom
FROM ${BASE_IMAGE} as with-vnc

ARG DEBIAN_FRONTEND=noninteractive
ARG TARGETPLATFORM

RUN echo ${TARGETPLATFORM} | sed s/linux\\///g | sed s/amd64/x86_64/g > /tmp/arch.txt

RUN apt-get update && apt-get install -y \
    net-tools \
    openbox \
    tint2 \
    x11-xserver-utils \
    x11vnc \
    xinit \
    xserver-xorg-video-dummy \
    xserver-xorg-input-void \
    procps

# Need to install supervisor and websockify. Do so
#   through pip3 so that they get included with the
#   virtualenv being copied over
RUN pip3 install supervisor websockify

# Make the /vnc folder and copy over the contents of /etc
ADD utilities/vnc/etc /vnc/etc
WORKDIR /vnc
RUN mkdir root && mv etc/skel/.xinitrc root/.xinitrc

# Add in noVNC
ADD third-party/noVNC opt/noVNC
# Set up default index.html
RUN cd opt/noVNC && ln -s vnc_auto.html index.html
# Set up link to python3 websockify in the venv
RUN mkdir opt/noVNC/utils/websockify && ln -sf /opt/venv/bin/websockify opt/noVNC/utils/websockify/run

# Add in everything else that the VNC requires from the rootfs
RUN mkdir -p usr/lib && \
    cp -r /usr/lib/xorg usr/lib
RUN mkdir -p usr/share && \
    cp -r /usr/share/X11 usr/share && \
    cp -r /usr/share/themes usr/share && \
    cp -r /usr/share/icons usr/share && \
    cp -r /usr/share/fonts usr/share && \
    cp -r /usr/share/tint2 usr/share
RUN cp -r /etc/X11 etc ** && \
    cp -r /etc/xdg/tint2 etc/xdg

# Tar up everything we need for the VNC. This
# will contain files that we'll copy over to:
#   /etc
#   /root
#   /opt
#   /usr/lib
#   /usr/share
#   /usr/bin
RUN tar -czvpf vnc.tar.gz etc root opt usr

# And move all needed binaries to /usr/local/bin s.t.
#   they get picked up by the part of the minimize
#   script that checks for needed libraries
RUN cp /usr/bin/x11vnc /usr/local/bin && \
    cp /usr/bin/xinit /usr/local/bin && \
    cp /usr/bin/openbox /usr/local/bin && \
    cp /usr/bin/tint2 /usr/local/bin && \
    cp /usr/bin/X /usr/local/bin && \
    cp /usr/lib/xorg/Xorg /usr/local/bin && \
    cp /usr/bin/xkbcomp /usr/local/bin && \
    cp /usr/bin/xsetroot /usr/local/bin

# And move the libraries that don't get pulled
#   automatically
RUN cp /usr/lib/$( cat /tmp/arch.txt )-linux-gnu/dri/swrast_dri.so /usr/local/lib
