################################################################################
#
# Dockerfile for minimizing a build and only copying over
#   libraries and the python virtual environment
#
################################################################################

# Previous base we're going to build atop
ARG BASE_IMAGE
# Image this version of atom will ship with. Needed to determine which
#   libraries we need to package up
ARG PRODUCTION_IMAGE

#
# Determine libraries that are already in production
#
FROM ${PRODUCTION_IMAGE} as no-deps
# Auto-set by Docker based on the --platform flag. Will be of the form
#   linux/amd64 or linux/aarch64
ARG TARGETPLATFORM
RUN echo ${TARGETPLATFORM} | sed s/linux\\///g | sed s/amd64/x86_64/g > /tmp/arch.txt
RUN ls /lib/$( cat /tmp/arch.txt )-linux-gnu/*.so* > /tmp/existing_libs.txt && \
    ls /usr/lib/$( cat /tmp/arch.txt )-linux-gnu/*.so* >> /tmp/existing_libs.txt

#
# Copy missing libraries into /usr/local/lib
#
FROM ${BASE_IMAGE} as with-deps
ARG ADDITIONAL_LIB_LOCATIONS=""

# Figure out which libraries we need
ADD ./utilities/ldd_find_libs.sh /tmp/ldd_find_libs.sh
RUN /tmp/ldd_find_libs.sh

# Copy over the file that lets us know what's already in the final
#   image we're being built atop
COPY --from=no-deps /tmp/existing_libs.txt /tmp/existing_libs.txt

# Figure out what we need to copy into /usr/local/lib.
RUN diff --new-line-format="" --unchanged-line-format=""  /tmp/required_libs.txt /tmp/existing_libs.txt | grep -v /usr/local/lib > /tmp/libs_to_copy.txt || exit 0

# Copy things into /usr/local/lib
RUN if [ -s /tmp/libs_to_copy.txt ];then xargs -a /tmp/libs_to_copy.txt cp -L -t /usr/local/lib; fi

#
# Clean up and only ship the following folders:
#   1. /usr/local/lib
#   2. /usr/local/include
#   3. /opt/venv
#   4. /usr/local/bin
#
FROM ${PRODUCTION_IMAGE} as minimized

# Set up the path to look to the venv first for python
ENV PATH="/opt/venv/bin:$PATH"
# Set up the LD_LIBRARY_PATH to look to /usr/local/lib
ENV LD_LIBRARY_PATH=/usr/local/lib:${LD_LIBRARY_PATH}

# Need a basic python install
RUN apt-get update -y \
 && apt-get install -y --no-install-recommends apt-utils \
                                               python3-minimal \
                                               python3-pip
# Upgrade to the latest pip
RUN pip3 install --upgrade pip

# Copy over everything we built
COPY --from=with-deps /usr/local/lib /usr/local/lib
COPY --from=with-deps /usr/local/include /usr/local/include
COPY --from=with-deps /opt/venv /opt/venv
COPY --from=with-deps /usr/local/bin /usr/local/bin
